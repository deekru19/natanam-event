{"version":3,"file":"static/js/128.6ac7b13a.chunk.js","mappings":"0KAQA,MAgEA,EAhEwEA,IAGjE,IAHkE,aACvEC,EAAY,gBACZC,GACDF,EACC,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8HAA6HC,SAAC,6BAG5IC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6FACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gDAA+CC,SAAC,iEAK/DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gEAA+DC,SAC3EE,EAAAA,EAAYC,iBAAiBC,IAAI,CAACC,EAAMC,KACvCL,EAAAA,EAAAA,KAAA,UAEEM,QAASA,IAAMV,EAAgBQ,EAAKG,IACpCT,UAAW,oKAEPH,IAAiBS,EAAKG,GACpB,kFACA,oKAGNC,MAAO,CAAEC,eAA2B,IAARJ,EAAH,MAAqBN,UAE9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+EAA8EC,SAAA,EAC3FC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,4KAEZH,IAAiBS,EAAKG,GACpB,+CACA,iHAGJR,UACAC,EAAAA,EAAAA,KAAA,OACEU,IAAK,IAAIN,EAAKO,KAAKC,qBACnBC,IAAK,GAAGT,EAAKO,mBACbb,UAAU,4FACVgB,QAAQ,OACRC,QAAUC,IAAO,IAADC,EAEd,MAAMC,EAASF,EAAEE,OACjBA,EAAOV,MAAMW,QAAU,OACvB,MAAMC,EAAWC,SAASC,cAAc,OACxCF,EAAStB,UAAY,qJACrBsB,EAASG,YAA4B,SAAdnB,EAAKO,KAAkB,eAAqB,SAAdP,EAAKO,KAAkB,eAAO,qEAClE,QAAjBM,EAAAC,EAAOM,kBAAU,IAAAP,GAAjBA,EAAmBQ,YAAYL,SAIrCpB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2DAA0DC,SAAEK,EAAKO,WApC5EP,EAAKG,U","sources":["components/PerformanceTypeSelector.tsx"],"sourcesContent":["import React from 'react';\nimport { eventConfig, PerformanceType } from '../config/eventConfig';\n\ninterface PerformanceTypeSelectorProps {\n  selectedType: string;\n  onTypeSelection: (type: string) => void;\n}\n\nconst PerformanceTypeSelector: React.FC<PerformanceTypeSelectorProps> = ({ \n  selectedType, \n  onTypeSelection \n}) => {\n  return (\n    <div className=\"space-y-6 sm:space-y-8\">\n      <div className=\"text-center\">\n        <h3 className=\"text-2xl sm:text-3xl font-bold bg-gradient-to-r from-rose-600 to-orange-600 bg-clip-text text-transparent mb-3 font-heading\">\n          Select Performance Type\n        </h3>\n        <div className=\"w-16 sm:w-24 h-1 bg-gradient-to-r from-rose-500 to-orange-500 mx-auto rounded-full mb-4\"></div>\n        <p className=\"text-sm sm:text-lg text-slate-700 font-medium\">\n          Choose the type of performance you want to register for.\n        </p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n        {eventConfig.performanceTypes.map((type, index) => (\n          <button\n            key={type.id}\n            onClick={() => onTypeSelection(type.id)}\n            className={`\n              p-6 sm:p-8 rounded-xl sm:rounded-2xl border-2 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl h-48 sm:h-56\n              ${selectedType === type.id\n                ? 'border-rose-500 bg-gradient-to-br from-rose-50 to-orange-50 shadow-xl scale-105'\n                : 'border-slate-200 bg-white/80 backdrop-blur-sm hover:border-rose-300 hover:bg-gradient-to-br hover:from-rose-50/50 hover:to-orange-50/50 shadow-lg'\n              }\n            `}\n            style={{ animationDelay: `${index * 200}ms` }}\n          >\n            <div className=\"flex flex-col items-center justify-center text-center space-y-4 sm:space-y-6\">\n              <div className={`\n                w-20 h-20 sm:w-24 sm:h-24 rounded-full overflow-hidden flex items-center justify-center bg-gradient-to-br from-slate-100 to-slate-200\n                ${selectedType === type.id\n                  ? 'ring-4 ring-rose-500 ring-offset-2 shadow-lg'\n                  : 'ring-2 ring-slate-200 shadow-md hover:shadow-lg'\n                }\n                transition-all duration-300\n              `}>\n                <img \n                  src={`/${type.name.toLowerCase()}.webp`}\n                  alt={`${type.name} performance`}\n                  className=\"w-full h-full object-cover rounded-full transition-transform duration-300 hover:scale-105\"\n                  loading=\"lazy\"\n                  onError={(e) => {\n                    // Fallback to emoji if image fails to load\n                    const target = e.target as HTMLImageElement;\n                    target.style.display = 'none';\n                    const fallback = document.createElement('div');\n                    fallback.className = 'w-full h-full flex items-center justify-center text-white font-bold text-2xl sm:text-3xl bg-gradient-to-r from-slate-400 to-slate-500 rounded-full';\n                    fallback.textContent = type.name === 'Solo' ? '👤' : type.name === 'Duet' ? '👥' : '👨‍👩‍👧‍👦';\n                    target.parentNode?.appendChild(fallback);\n                  }}\n                />\n              </div>\n              <h4 className=\"text-lg sm:text-xl font-bold text-slate-800 font-heading\">{type.name}</h4>\n            </div>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceTypeSelector; "],"names":["_ref","selectedType","onTypeSelection","_jsxs","className","children","_jsx","eventConfig","performanceTypes","map","type","index","onClick","id","style","animationDelay","src","name","toLowerCase","alt","loading","onError","e","_target$parentNode","target","display","fallback","document","createElement","textContent","parentNode","appendChild"],"sourceRoot":""}