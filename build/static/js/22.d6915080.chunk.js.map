{"version":3,"file":"static/js/22.d6915080.chunk.js","mappings":"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","sources":["services/whatsAppService.ts","components/MessageModal.tsx","components/AdminPanel.tsx"],"sourcesContent":["// WhatsApp messaging service using Facebook Cloud API\nimport { FlatBooking } from \"./firebaseService\";\n\ninterface WhatsAppMessage {\n  messaging_product: string;\n  to: string;\n  type: string;\n  text: {\n    body: string;\n  };\n}\n\nclass WhatsAppService {\n  private readonly accessToken: string;\n  private readonly phoneNumberId: string;\n  private readonly apiVersion: string = \"v21.0\";\n  private readonly baseUrl: string;\n\n  constructor() {\n    this.accessToken = process.env.REACT_APP_FACEBOOK_ACCESS_TOKEN || \"\";\n    this.phoneNumberId = process.env.REACT_APP_FACEBOOK_PHONE_NUMBER_ID || \"\";\n    this.baseUrl = `https://graph.facebook.com/${this.apiVersion}`;\n\n    if (!this.accessToken || !this.phoneNumberId) {\n      console.error(\"Facebook WhatsApp credentials not found in environment variables\");\n    }\n  }\n\n  /**\n   * Replace placeholders in message template with booking data\n   */\n  private replacePlaceholders(template: string, booking: FlatBooking): string {\n    let message = template;\n\n    // Define placeholder mappings\n    const placeholders: { [key: string]: string } = {\n      \"{name}\":\n        booking.participantName ||\n        booking.fullName ||\n        booking.participant1Name ||\n        booking.groupName ||\n        \"N/A\",\n      \"{email}\": booking.email || \"N/A\",\n      \"{phone}\":\n        booking.phoneNumber || booking.participant1Phone || booking.representativePhone || \"N/A\",\n      \"{booking_id}\": booking.bookingId || \"N/A\",\n      \"{event_name}\": \"Natanam Dance Event\",\n      \"{event_date}\": booking.date || \"N/A\",\n      \"{event_time}\": booking.timeSlot || \"N/A\",\n      \"{performance_type}\": booking.performanceTypeName || booking.performanceType || \"N/A\",\n      \"{city}\": booking.cityResidence || \"N/A\",\n      \"{guru_name}\": booking.guruName || \"N/A\",\n      \"{category}\": booking.performanceCategory || \"N/A\",\n      \"{price}\": booking.pricePerPerson?.toString() || \"N/A\",\n      \"{amount}\": booking.amountPerSlot?.toString() || \"N/A\",\n      \"{created_at}\": booking.timestamp\n        ? new Date(booking.timestamp.toDate()).toLocaleDateString()\n        : \"N/A\",\n      \"{participant_age}\": booking.participantAge || \"N/A\",\n      \"{participant1_name}\": booking.participant1Name || \"N/A\",\n      \"{participant2_name}\": booking.participant2Name || \"N/A\",\n      \"{participant1_phone}\": booking.participant1Phone || \"N/A\",\n      \"{participant2_phone}\": booking.participant2Phone || \"N/A\",\n      \"{group_name}\": booking.groupName || \"N/A\",\n      \"{member_names}\": booking.memberNames || \"N/A\",\n      \"{representative_phone}\": booking.representativePhone || \"N/A\",\n      \"{payment_id}\": booking.paymentId || \"N/A\",\n      \"{status}\": booking.paymentStatus || \"N/A\",\n    };\n\n    // Replace all placeholders\n    Object.keys(placeholders).forEach((placeholder) => {\n      message = message.replace(\n        new RegExp(placeholder.replace(/[{}]/g, \"\\\\$&\"), \"g\"),\n        placeholders[placeholder]\n      );\n    });\n\n    return message;\n  }\n\n  /**\n   * Get phone number for messaging from booking data\n   */\n  private getPhoneNumber(booking: FlatBooking): string | null {\n    // Try different phone number fields based on performance type\n    const phoneNumber =\n      booking.phoneNumber || booking.participant1Phone || booking.representativePhone;\n\n    if (!phoneNumber) {\n      return null;\n    }\n\n    // Clean and format phone number (remove spaces, dashes, etc.)\n    let cleanPhone = phoneNumber.replace(/\\D/g, \"\");\n\n    // Add country code if not present (assuming India +91)\n    if (!cleanPhone.startsWith(\"91\") && cleanPhone.length === 10) {\n      cleanPhone = \"91\" + cleanPhone;\n    }\n\n    return cleanPhone;\n  }\n\n  /**\n   * Send a single WhatsApp message\n   */\n  private async sendMessage(phoneNumber: string, message: string): Promise<boolean> {\n    try {\n      const messageData: WhatsAppMessage = {\n        messaging_product: \"whatsapp\",\n        to: phoneNumber,\n        type: \"text\",\n        text: {\n          body: message,\n        },\n      };\n\n      const response = await fetch(`${this.baseUrl}/${this.phoneNumberId}/messages`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this.accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(messageData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"WhatsApp API error:\", errorData);\n        return false;\n      }\n\n      const result = await response.json();\n      console.log(\"Message sent successfully:\", result);\n      return true;\n    } catch (error) {\n      console.error(\"Error sending WhatsApp message:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Send batch messages to all bookings\n   */\n  async sendBatchMessages(\n    messageTemplate: string,\n    bookings: FlatBooking[],\n    onProgress?: (sent: number, total: number, success: number, failed: number) => void\n  ): Promise<{\n    success: number;\n    failed: number;\n    results: Array<{ booking: FlatBooking; success: boolean; error?: string }>;\n  }> {\n    const results: Array<{ booking: FlatBooking; success: boolean; error?: string }> = [];\n    let successCount = 0;\n    let failedCount = 0;\n\n    for (let i = 0; i < bookings.length; i++) {\n      const booking = bookings[i];\n\n      try {\n        // Get phone number\n        const phoneNumber = this.getPhoneNumber(booking);\n\n        if (!phoneNumber) {\n          results.push({\n            booking,\n            success: false,\n            error: \"No valid phone number found\",\n          });\n          failedCount++;\n          continue;\n        }\n\n        // Replace placeholders in message\n        const personalizedMessage = this.replacePlaceholders(messageTemplate, booking);\n\n        // Send message\n        const success = await this.sendMessage(phoneNumber, personalizedMessage);\n\n        results.push({\n          booking,\n          success,\n          error: success ? undefined : \"Failed to send message\",\n        });\n\n        if (success) {\n          successCount++;\n        } else {\n          failedCount++;\n        }\n\n        // Call progress callback\n        if (onProgress) {\n          onProgress(i + 1, bookings.length, successCount, failedCount);\n        }\n\n        // Add small delay between messages to avoid rate limiting\n        if (i < bookings.length - 1) {\n          await new Promise((resolve) => setTimeout(resolve, 100));\n        }\n      } catch (error) {\n        results.push({\n          booking,\n          success: false,\n          error: error instanceof Error ? error.message : \"Unknown error\",\n        });\n        failedCount++;\n      }\n    }\n\n    return {\n      success: successCount,\n      failed: failedCount,\n      results,\n    };\n  }\n\n  /**\n   * Get available placeholders for the UI\n   */\n  getAvailablePlaceholders(): string[] {\n    return [\n      \"{name}\",\n      \"{email}\",\n      \"{phone}\",\n      \"{booking_id}\",\n      \"{event_name}\",\n      \"{event_date}\",\n      \"{event_time}\",\n      \"{performance_type}\",\n      \"{city}\",\n      \"{guru_name}\",\n      \"{category}\",\n      \"{price}\",\n      \"{amount}\",\n      \"{created_at}\",\n      \"{participant_age}\",\n      \"{participant1_name}\",\n      \"{participant2_name}\",\n      \"{participant1_phone}\",\n      \"{participant2_phone}\",\n      \"{group_name}\",\n      \"{member_names}\",\n      \"{representative_phone}\",\n      \"{payment_id}\",\n      \"{status}\",\n    ];\n  }\n\n  /**\n   * Preview message for a sample booking\n   */\n  previewMessage(template: string, sampleBooking: FlatBooking): string {\n    return this.replacePlaceholders(template, sampleBooking);\n  }\n}\n\nexport const whatsAppService = new WhatsAppService();\nexport default WhatsAppService;\n","import React, { useState, useEffect } from 'react';\nimport { FlatBooking } from '../services/firebaseService';\nimport { whatsAppService } from '../services/whatsAppService';\n\ninterface MessageModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  bookings: FlatBooking[];\n}\n\nconst MessageModal: React.FC<MessageModalProps> = ({ isOpen, onClose, bookings }) => {\n  const [messageTemplate, setMessageTemplate] = useState('');\n  const [previewMessage, setPreviewMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const [sendProgress, setSendProgress] = useState({ sent: 0, total: 0, success: 0, failed: 0 });\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [sendResults, setSendResults] = useState<{ success: number; failed: number; results: any[] } | null>(null);\n\n  const availablePlaceholders = whatsAppService.getAvailablePlaceholders();\n\n  // Sample booking for preview\n  const sampleBooking = bookings.length > 0 ? bookings[0] : null;\n\n  useEffect(() => {\n    if (messageTemplate && sampleBooking) {\n      const preview = whatsAppService.previewMessage(messageTemplate, sampleBooking);\n      setPreviewMessage(preview);\n    } else {\n      setPreviewMessage('');\n    }\n  }, [messageTemplate, sampleBooking]);\n\n  const handleSendMessages = async () => {\n    if (!messageTemplate.trim()) {\n      alert('Please enter a message template');\n      return;\n    }\n\n    if (bookings.length === 0) {\n      alert('No bookings found to send messages to');\n      return;\n    }\n\n    setIsSending(true);\n    setSendProgress({ sent: 0, total: bookings.length, success: 0, failed: 0 });\n\n    try {\n      const results = await whatsAppService.sendBatchMessages(\n        messageTemplate,\n        bookings,\n        (sent, total, success, failed) => {\n          setSendProgress({ sent, total, success, failed });\n        }\n      );\n\n      setSendResults(results);\n      setShowConfirm(false);\n      \n      // Show success/failure summary\n      alert(`Batch messaging completed!\\nSuccessful: ${results.success}\\nFailed: ${results.failed}`);\n      \n    } catch (error) {\n      console.error('Batch messaging error:', error);\n      alert('Failed to send messages. Please try again.');\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const insertPlaceholder = (placeholder: string) => {\n    const textarea = document.getElementById('message-template') as HTMLTextAreaElement;\n    if (textarea) {\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const newValue = messageTemplate.substring(0, start) + placeholder + messageTemplate.substring(end);\n      setMessageTemplate(newValue);\n      \n      // Focus back to textarea and set cursor position\n      setTimeout(() => {\n        textarea.focus();\n        textarea.setSelectionRange(start + placeholder.length, start + placeholder.length);\n      }, 0);\n    }\n  };\n\n  const resetModal = () => {\n    setMessageTemplate('');\n    setPreviewMessage('');\n    setIsSending(false);\n    setSendProgress({ sent: 0, total: 0, success: 0, failed: 0 });\n    setShowConfirm(false);\n    setSendResults(null);\n  };\n\n  const handleClose = () => {\n    if (!isSending) {\n      resetModal();\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-2xl font-bold text-gray-800\">Send Batch WhatsApp Messages</h2>\n            <button\n              onClick={handleClose}\n              disabled={isSending}\n              className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold disabled:opacity-50\"\n            >\n              ×\n            </button>\n          </div>\n          <p className=\"text-gray-600 mt-2\">Send personalized messages to {bookings.length} booking(s)</p>\n        </div>\n\n        <div className=\"p-6 space-y-6\">\n          {/* Message Template Section */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Message Template\n            </label>\n            <textarea\n              id=\"message-template\"\n              value={messageTemplate}\n              onChange={(e) => setMessageTemplate(e.target.value)}\n              placeholder=\"Enter your message template with placeholders...\"\n              className=\"w-full h-32 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n              disabled={isSending}\n            />\n            \n            {/* Placeholder Helper */}\n            <div className=\"mt-3\">\n              <p className=\"text-sm font-medium text-gray-700 mb-2\">Available Placeholders:</p>\n              <div className=\"flex flex-wrap gap-2 max-h-24 overflow-y-auto\">\n                {availablePlaceholders.map((placeholder) => (\n                  <button\n                    key={placeholder}\n                    onClick={() => insertPlaceholder(placeholder)}\n                    disabled={isSending}\n                    className=\"px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs hover:bg-blue-200 transition-colors disabled:opacity-50\"\n                  >\n                    {placeholder}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Preview Section */}\n          {previewMessage && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Preview (Sample Message)\n              </label>\n              <div className=\"p-3 bg-gray-50 border border-gray-200 rounded-lg min-h-[80px] whitespace-pre-wrap\">\n                {previewMessage}\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Preview based on: {sampleBooking?.participantName || sampleBooking?.fullName || 'Sample booking'}\n              </p>\n            </div>\n          )}\n\n          {/* Progress Section */}\n          {isSending && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Sending Progress\n              </label>\n              <div className=\"space-y-2\">\n                <div className=\"w-full bg-gray-200 rounded-full h-3\">\n                  <div \n                    className=\"bg-blue-600 h-3 rounded-full transition-all duration-300\"\n                    style={{ width: `${(sendProgress.sent / sendProgress.total) * 100}%` }}\n                  ></div>\n                </div>\n                <div className=\"flex justify-between text-sm text-gray-600\">\n                  <span>Progress: {sendProgress.sent}/{sendProgress.total}</span>\n                  <span>Success: {sendProgress.success} | Failed: {sendProgress.failed}</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Results Section */}\n          {sendResults && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Results Summary\n              </label>\n              <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\n                <p className=\"text-green-800\">\n                  ✅ Successfully sent: {sendResults.success} messages<br/>\n                  ❌ Failed: {sendResults.failed} messages\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Confirmation Modal */}\n          {showConfirm && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-60\">\n              <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Confirm Batch Messaging</h3>\n                <p className=\"text-gray-600 mb-6\">\n                  Are you sure you want to send messages to {bookings.length} recipients?\n                  This action cannot be undone.\n                </p>\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={() => setShowConfirm(false)}\n                    className=\"flex-1 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSendMessages}\n                    className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                  >\n                    Send Messages\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"p-6 border-t border-gray-200 flex justify-end space-x-3\">\n          <button\n            onClick={handleClose}\n            disabled={isSending}\n            className=\"px-6 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors disabled:opacity-50\"\n          >\n            {isSending ? 'Sending...' : 'Close'}\n          </button>\n          <button\n            onClick={() => setShowConfirm(true)}\n            disabled={isSending || !messageTemplate.trim()}\n            className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50\"\n          >\n            Send Messages ({bookings.length})\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageModal;\n","import React, { useState, useEffect } from 'react';\nimport { exportBookingsToCSV, downloadCSV, getAllFlatBookings, FlatBooking, deleteBooking, updateBooking, addBooking, getAvailableTimeSlots } from '../services/firebaseService';\nimport { eventConfig } from '../config/eventConfig';\nimport MessageModal from './MessageModal';\n\nconst AdminPanel: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [bookings, setBookings] = useState<FlatBooking[]>([]);\n  const [editingBooking, setEditingBooking] = useState<FlatBooking | null>(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // Add resizable column functionality\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      .resizable-table {\n        border-collapse: separate;\n        border-spacing: 0;\n        width: 100%;\n      }\n      .resizable-table th {\n        position: relative;\n        user-select: none;\n        border-right: 1px solid #e2e8f0;\n      }\n      .resizable-table th .resize-handle {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 5px;\n        height: 100%;\n        cursor: col-resize;\n        background: transparent;\n        z-index: 1;\n      }\n      .resizable-table th .resize-handle:hover {\n        background: rgba(59, 130, 246, 0.4);\n      }\n      .resizable-table th.resizing {\n        user-select: none;\n      }\n    `;\n    document.head.appendChild(style);\n\n    const addResizeHandlers = () => {\n      const table = document.querySelector('.resizable-table') as HTMLTableElement;\n      if (!table) return;\n\n      const headers = table.querySelectorAll('th');\n      headers.forEach((header, index) => {\n        if (index === headers.length - 1) return; // Skip last column\n\n        // Remove existing handle if any\n        const existingHandle = header.querySelector('.resize-handle');\n        if (existingHandle) existingHandle.remove();\n\n        const resizeHandle = document.createElement('div');\n        resizeHandle.className = 'resize-handle';\n        header.appendChild(resizeHandle);\n\n        let isResizing = false;\n        let startX = 0;\n        let startWidth = 0;\n\n        resizeHandle.addEventListener('mousedown', (e) => {\n          isResizing = true;\n          startX = e.clientX;\n          startWidth = header.offsetWidth;\n          header.classList.add('resizing');\n          document.body.style.cursor = 'col-resize';\n          e.preventDefault();\n        });\n\n        document.addEventListener('mousemove', (e) => {\n          if (!isResizing) return;\n          const diff = e.clientX - startX;\n          const newWidth = Math.max(100, startWidth + diff); // Minimum width of 100px\n          header.style.width = newWidth + 'px';\n          header.style.minWidth = newWidth + 'px';\n        });\n\n        document.addEventListener('mouseup', () => {\n          if (isResizing) {\n            isResizing = false;\n            header.classList.remove('resizing');\n            document.body.style.cursor = 'default';\n          }\n        });\n      });\n    };\n\n    // Add handlers after a short delay to ensure table is rendered\n    setTimeout(addResizeHandlers, 100);\n    \n    return () => {\n      document.head.removeChild(style);\n    };\n  }, [bookings]); // Re-run when bookings change\n  const [newBooking, setNewBooking] = useState<Partial<FlatBooking>>({});\n  const [availableTimeSlots, setAvailableTimeSlots] = useState<string[]>([]);\n  const [editAvailableTimeSlots, setEditAvailableTimeSlots] = useState<string[]>([]);\n  const [showMessageModal, setShowMessageModal] = useState(false);\n\n  // Load bookings on component mount\n  useEffect(() => {\n    loadBookings();\n  }, []);\n\n  const loadBookings = async () => {\n    setLoading(true);\n    try {\n      const allBookings = await getAllFlatBookings();\n      setBookings(allBookings);\n    } catch (error) {\n      console.error('Failed to fetch bookings:', error);\n      alert('Failed to fetch bookings. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportCSV = async () => {\n    setLoading(true);\n    try {\n      const csvContent = await exportBookingsToCSV();\n      if (csvContent) {\n        const filename = `dance_event_bookings_${new Date().toISOString().split('T')[0]}.csv`;\n        downloadCSV(csvContent, filename);\n      } else {\n        alert('No bookings found to export.');\n      }\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('Export failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (bookingId: string) => {\n    if (window.confirm('Are you sure you want to delete this booking?')) {\n      try {\n        await deleteBooking(bookingId);\n        await loadBookings(); // Reload the list\n        alert('Booking deleted successfully');\n      } catch (error) {\n        console.error('Delete failed:', error);\n        alert('Failed to delete booking. Please try again.');\n      }\n    }\n  };\n\n  const handleUpdate = async (booking: FlatBooking) => {\n    try {\n      await updateBooking(booking);\n      setEditingBooking(null);\n      await loadBookings(); // Reload the list\n      alert('Booking updated successfully');\n    } catch (error) {\n      console.error('Update failed:', error);\n      alert('Failed to update booking. Please try again.');\n    }\n  };\n\n  const loadAvailableTimeSlots = async (date: string) => {\n    try {\n      console.log('Loading available time slots for date:', date);\n      const slots = await getAvailableTimeSlots(date);\n      console.log('Available slots:', slots);\n      setAvailableTimeSlots(slots);\n    } catch (error) {\n      console.error('Failed to load available time slots:', error);\n      setAvailableTimeSlots([]);\n    }\n  };\n\n  const loadEditAvailableTimeSlots = async (date: string, currentTimeSlot: string) => {\n    try {\n      const slots = await getAvailableTimeSlots(date);\n      // Include the current time slot in the options for editing\n      if (!slots.includes(currentTimeSlot)) {\n        slots.push(currentTimeSlot);\n      }\n      setEditAvailableTimeSlots(slots.sort());\n    } catch (error) {\n      console.error('Failed to load available time slots for editing:', error);\n      setEditAvailableTimeSlots([currentTimeSlot]);\n    }\n  };\n\n  const handleAdd = async () => {\n    try {\n      await addBooking(newBooking as FlatBooking);\n      setShowAddModal(false);\n      setNewBooking({});\n      await loadBookings(); // Reload the list\n      alert('Booking added successfully');\n    } catch (error) {\n      console.error('Add failed:', error);\n      alert('Failed to add booking. Please try again.');\n    }\n  };\n\n  const formatTimestamp = (timestamp: any): string => {\n    if (!timestamp) return 'N/A';\n    try {\n      return new Date(timestamp.toDate()).toLocaleString('en-IN', {\n        timeZone: 'Asia/Kolkata',\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: true\n      });\n    } catch {\n      return 'N/A';\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 relative z-10\">\n      <div className=\"bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-slate-200\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-slate-800\">Admin Panel - Booking Management</h2>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={async () => {\n                setShowAddModal(true);\n                // Set default date to event date\n                const eventDate = eventConfig.eventDate;\n                setNewBooking({...newBooking, date: eventDate});\n                await loadAvailableTimeSlots(eventDate);\n              }}\n              className=\"px-4 py-2 bg-gradient-to-r from-emerald-500 to-teal-500 text-white rounded-lg hover:from-emerald-600 hover:to-teal-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1\"\n            >\n              Add Booking\n            </button>\n            <button\n              onClick={() => setShowMessageModal(true)}\n              disabled={loading || bookings.length === 0}\n              className=\"px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg hover:from-purple-600 hover:to-pink-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1 disabled:opacity-50\"\n            >\n              Message ({bookings.length})\n            </button>\n            <button\n              onClick={handleExportCSV}\n              disabled={loading}\n              className=\"px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-500 text-white rounded-lg hover:from-blue-600 hover:to-indigo-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1 disabled:opacity-50\"\n            >\n              {loading ? 'Exporting...' : 'Export CSV'}\n            </button>\n          </div>\n        </div>\n\n        {/* Bookings Table */}\n        {loading ? (\n          <div className=\"flex justify-center items-center p-12\">\n            <div className=\"relative\">\n              <div className=\"w-12 h-12 border-4 border-purple-400/30 border-t-purple-400 rounded-full animate-spin\"></div>\n              <div className=\"absolute inset-0 w-12 h-12 border-4 border-transparent border-t-pink-400 rounded-full animate-spin animation-delay-150\"></div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <h3 className=\"text-lg font-semibold text-slate-800 mb-4\">\n              All Bookings ({bookings.length} records)\n            </h3>\n            <table className=\"min-w-full bg-white/80 backdrop-blur-sm border border-slate-200 rounded-lg overflow-hidden resizable-table\" style={{tableLayout: 'fixed'}}>\n                            <thead className=\"bg-gradient-to-r from-blue-100 to-indigo-200 text-gray-800\">\n                <tr>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '160px', minWidth: '100px'}}>Actions</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '160px', minWidth: '160px'}}>Time</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '90px', minWidth: '90px'}}>Type</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '110px', minWidth: '110px'}}>Price/Person</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '180px', minWidth: '180px'}}>Participant Name</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '140px', minWidth: '140px'}}>Phone</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '220px', minWidth: '220px'}}>Email</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '120px', minWidth: '120px'}}>City</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '150px', minWidth: '150px'}}>Guru Name</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '120px', minWidth: '120px'}}>Category</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '120px', minWidth: '120px'}}>Amount/Slot</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '160px', minWidth: '160px'}}>Timestamp</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '180px', minWidth: '180px'}}>Payment ID</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '120px', minWidth: '120px'}}>Status</th>\n                  <th className=\"px-3 py-3 text-left text-xs font-medium uppercase tracking-wider\" style={{width: '140px', minWidth: '140px'}}>Booking ID</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-slate-200\">\n                {bookings.map((booking, index) => (\n                  <tr key={booking.id || index} className=\"hover:bg-slate-50 transition-colors\">\n                    <td className=\"px-4 py-2 text-sm border-b border-slate-200\">\n                      <div className=\"flex space-x-1\">\n                        <button\n                          onClick={async () => {\n                            setEditingBooking(booking);\n                            await loadEditAvailableTimeSlots(booking.date, booking.timeSlot);\n                          }}\n                          className=\"px-2 py-1 bg-gradient-to-r from-blue-500 to-indigo-500 text-white text-xs rounded hover:from-blue-600 hover:to-indigo-600 transition-all duration-300 shadow-sm\"\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => handleDelete(booking.id!)}\n                          className=\"px-2 py-1 bg-gradient-to-r from-red-500 to-rose-500 text-white text-xs rounded hover:from-red-600 hover:to-rose-600 transition-all duration-300 shadow-sm\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.timeSlot}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.performanceTypeName}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      ₹{booking.pricePerPerson}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.participantName}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.performanceType === 'duet' \n                        ? `${booking.participant1Phone || ''} / ${booking.participant2Phone || ''}` \n                        : booking.phoneNumber || booking.representativePhone || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.email || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.cityResidence || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.guruName || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.performanceCategory || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      ₹{booking.amountPerSlot}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {formatTimestamp(booking.timestamp)}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.paymentId || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.paymentStatus || '-'}\n                    </td>\n                    <td className=\"px-4 py-2 text-sm text-slate-700 border-b border-slate-200\">\n                      {booking.bookingId}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {/* Instructions */}\n        <div className=\"mt-8 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-200\">\n          <h4 className=\"font-medium text-blue-800 mb-2\">Admin Panel Instructions</h4>\n          <ul className=\"text-sm text-blue-700 space-y-1\">\n            <li>• <strong>View Bookings:</strong> All bookings are displayed by default</li>\n            <li>• <strong>Add Booking:</strong> Click \"Add Booking\" to manually add a new booking</li>\n            <li>• <strong>Edit Booking:</strong> Click \"Edit\" on any row to modify booking details</li>\n            <li>• <strong>Delete Booking:</strong> Click \"Delete\" to remove a booking (with confirmation)</li>\n            <li>• <strong>Export CSV:</strong> Download all bookings as a CSV file</li>\n            <li>• CSV files can be opened in Excel, Google Sheets, or any spreadsheet application</li>\n          </ul>\n        </div>\n\n        {/* Edit Modal */}\n        {editingBooking && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\">\n              <h3 className=\"text-lg font-semibold mb-4\">Edit Booking</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Booking ID</label>\n                  <input\n                    type=\"text\"\n                    value={editingBooking.bookingId}\n                    onChange={(e) => setEditingBooking({...editingBooking, bookingId: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Date</label>\n                  <input\n                    type=\"date\"\n                    value={editingBooking.date}\n                    onChange={async (e) => {\n                      const newDate = e.target.value;\n                      setEditingBooking({...editingBooking, date: newDate});\n                      await loadEditAvailableTimeSlots(newDate, editingBooking.timeSlot);\n                    }}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Time Slot</label>\n                  <select\n                    value={editingBooking.timeSlot}\n                    onChange={(e) => setEditingBooking({...editingBooking, timeSlot: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  >\n                    <option value=\"\">Select a time slot</option>\n                    {editAvailableTimeSlots.map((slot) => (\n                      <option key={slot} value={slot}>\n                        {slot}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Performance Type</label>\n                  <input\n                    type=\"text\"\n                    value={editingBooking.performanceTypeName}\n                    onChange={(e) => setEditingBooking({...editingBooking, performanceTypeName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                \n                {/* Phone number fields - conditional based on performance type */}\n                {editingBooking.performanceType === 'duet' ? (\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Participant 1 Phone</label>\n                      <input\n                        type=\"text\"\n                        value={editingBooking.participant1Phone || ''}\n                        onChange={(e) => setEditingBooking({...editingBooking, participant1Phone: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Participant 2 Phone</label>\n                      <input\n                        type=\"text\"\n                        value={editingBooking.participant2Phone || ''}\n                        onChange={(e) => setEditingBooking({...editingBooking, participant2Phone: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </div>\n                ) : editingBooking.performanceType === 'group' ? (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Representative Phone</label>\n                    <input\n                      type=\"text\"\n                      value={editingBooking.representativePhone || ''}\n                      onChange={(e) => setEditingBooking({...editingBooking, representativePhone: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                ) : (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Phone</label>\n                    <input\n                      type=\"text\"\n                      value={editingBooking.phoneNumber || ''}\n                      onChange={(e) => setEditingBooking({...editingBooking, phoneNumber: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={editingBooking.email || ''}\n                    onChange={(e) => setEditingBooking({...editingBooking, email: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">City</label>\n                  <input\n                    type=\"text\"\n                    value={editingBooking.cityResidence || ''}\n                    onChange={(e) => setEditingBooking({...editingBooking, cityResidence: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Guru Name</label>\n                  <input\n                    type=\"text\"\n                    value={editingBooking.guruName || ''}\n                    onChange={(e) => setEditingBooking({...editingBooking, guruName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Performance Category</label>\n                  <input\n                    type=\"text\"\n                    value={editingBooking.performanceCategory || ''}\n                    onChange={(e) => setEditingBooking({...editingBooking, performanceCategory: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Amount Per Slot</label>\n                  <input\n                    type=\"number\"\n                    value={editingBooking.amountPerSlot}\n                    onChange={(e) => setEditingBooking({...editingBooking, amountPerSlot: parseInt(e.target.value)})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => setEditingBooking(null)}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => handleUpdate(editingBooking)}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Update\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add Modal */}\n        {showAddModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Booking</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Booking ID</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.bookingId || ''}\n                    onChange={(e) => setNewBooking({...newBooking, bookingId: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Date</label>\n                  <input\n                    type=\"date\"\n                    value={newBooking.date || ''}\n                    onChange={async (e) => {\n                      const newDate = e.target.value;\n                      setNewBooking({...newBooking, date: newDate, timeSlot: ''}); // Clear time slot when date changes\n                      await loadAvailableTimeSlots(newDate);\n                    }}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Time Slot</label>\n                  <select\n                    value={newBooking.timeSlot || ''}\n                    onChange={(e) => setNewBooking({...newBooking, timeSlot: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  >\n                    <option value=\"\">Select a time slot</option>\n                    {availableTimeSlots.map((slot) => (\n                      <option key={slot} value={slot}>\n                        {slot}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Performance Type</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.performanceTypeName || ''}\n                    onChange={(e) => setNewBooking({...newBooking, performanceTypeName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Full Name</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.fullName || ''}\n                    onChange={(e) => setNewBooking({...newBooking, fullName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Phone</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.phoneNumber || ''}\n                    onChange={(e) => setNewBooking({...newBooking, phoneNumber: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={newBooking.email || ''}\n                    onChange={(e) => setNewBooking({...newBooking, email: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">City</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.cityResidence || ''}\n                    onChange={(e) => setNewBooking({...newBooking, cityResidence: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Guru Name</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.guruName || ''}\n                    onChange={(e) => setNewBooking({...newBooking, guruName: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Performance Category</label>\n                  <input\n                    type=\"text\"\n                    value={newBooking.performanceCategory || ''}\n                    onChange={(e) => setNewBooking({...newBooking, performanceCategory: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Amount Per Slot</label>\n                  <input\n                    type=\"number\"\n                    value={newBooking.amountPerSlot || ''}\n                    onChange={(e) => setNewBooking({...newBooking, amountPerSlot: parseInt(e.target.value)})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setShowAddModal(false);\n                    setNewBooking({});\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleAdd}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n                >\n                  Add Booking\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Message Modal */}\n        <MessageModal\n          isOpen={showMessageModal}\n          onClose={() => setShowMessageModal(false)}\n          bookings={bookings}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPanel; "],"names":["WhatsAppService","constructor","accessToken","phoneNumberId","apiVersion","baseUrl","this","process","console","error","replacePlaceholders","template","booking","_booking$pricePerPers","_booking$amountPerSlo","message","placeholders","participantName","fullName","participant1Name","groupName","email","phoneNumber","participant1Phone","representativePhone","bookingId","date","timeSlot","performanceTypeName","performanceType","cityResidence","guruName","performanceCategory","pricePerPerson","toString","amountPerSlot","timestamp","Date","toDate","toLocaleDateString","participantAge","participant2Name","participant2Phone","memberNames","paymentId","paymentStatus","Object","keys","forEach","placeholder","replace","RegExp","getPhoneNumber","cleanPhone","startsWith","length","sendMessage","messageData","messaging_product","to","type","text","body","response","fetch","method","headers","Authorization","JSON","stringify","ok","errorData","json","result","log","sendBatchMessages","messageTemplate","bookings","onProgress","results","successCount","failedCount","i","push","success","personalizedMessage","undefined","Promise","resolve","setTimeout","Error","failed","getAvailablePlaceholders","previewMessage","sampleBooking","whatsAppService","_ref","isOpen","onClose","setMessageTemplate","useState","setPreviewMessage","isSending","setIsSending","sendProgress","setSendProgress","sent","total","showConfirm","setShowConfirm","sendResults","setSendResults","availablePlaceholders","useEffect","preview","handleClose","_jsx","className","children","_jsxs","onClick","disabled","id","value","onChange","e","target","map","textarea","document","getElementById","start","selectionStart","end","selectionEnd","newValue","substring","focus","setSelectionRange","insertPlaceholder","style","width","async","trim","alert","AdminPanel","loading","setLoading","setBookings","editingBooking","setEditingBooking","showAddModal","setShowAddModal","createElement","textContent","head","appendChild","addResizeHandlers","table","querySelector","querySelectorAll","header","index","existingHandle","remove","resizeHandle","isResizing","startX","startWidth","addEventListener","clientX","offsetWidth","classList","add","cursor","preventDefault","diff","newWidth","Math","max","minWidth","removeChild","newBooking","setNewBooking","availableTimeSlots","setAvailableTimeSlots","editAvailableTimeSlots","setEditAvailableTimeSlots","showMessageModal","setShowMessageModal","loadBookings","allBookings","getAllFlatBookings","loadAvailableTimeSlots","slots","getAvailableTimeSlots","loadEditAvailableTimeSlots","currentTimeSlot","includes","sort","formatTimestamp","toLocaleString","timeZone","year","month","day","hour","minute","second","hour12","eventDate","eventConfig","csvContent","exportBookingsToCSV","filename","toISOString","split","downloadCSV","tableLayout","window","confirm","deleteBooking","handleDelete","newDate","slot","parseInt","updateBooking","handleUpdate","addBooking","MessageModal"],"sourceRoot":""}