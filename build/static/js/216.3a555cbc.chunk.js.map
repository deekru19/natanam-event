{"version":3,"file":"static/js/216.3a555cbc.chunk.js","mappings":"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","sources":["components/RegistrationForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { eventConfig, PerformanceType } from '../config/eventConfig';\n\ninterface RegistrationFormProps {\n  performanceType: string;\n  onSubmit: (formData: Record<string, any>) => void;\n  onBack: () => void;\n}\n\nconst RegistrationForm: React.FC<RegistrationFormProps> = ({ \n  performanceType, \n  onSubmit, \n  onBack \n}) => {\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const selectedType = eventConfig.performanceTypes.find(type => type.id === performanceType);\n\n  if (!selectedType) {\n    return <div>Invalid performance type selected.</div>;\n  }\n\n  const handleInputChange = (fieldId: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n    \n    // Real-time validation\n    if (value && value.toString().trim() !== '') {\n      const fieldValidation = validateField(fieldId, value.toString().trim());\n      setErrors(prev => ({\n        ...prev,\n        [fieldId]: fieldValidation\n      }));\n    } else {\n      // Clear error when user starts typing\n      if (errors[fieldId]) {\n        setErrors(prev => ({\n          ...prev,\n          [fieldId]: ''\n        }));\n      }\n    }\n  };\n\n  // Validation functions\n  const validateAge = (age: string): string => {\n    const ageNum = parseInt(age);\n    if (isNaN(ageNum)) {\n      return 'Age must be a number';\n    }\n    if (ageNum < 3 || ageNum > 90) {\n      return 'Age must be between 3 and 90';\n    }\n    return '';\n  };\n\n  const validatePhoneNumber = (phone: string): string => {\n    const phoneRegex = /^\\d{10}$/;\n    if (!phoneRegex.test(phone)) {\n      return 'Phone number must be exactly 10 digits';\n    }\n    return '';\n  };\n\n  const validateEmail = (email: string): string => {\n    if (!email) return ''; // Email is optional\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      return 'Please enter a valid email address';\n    }\n    return '';\n  };\n\n  const validateField = (fieldId: string, value: string): string => {\n    // Age validation\n    if (fieldId === 'age') {\n      return validateAge(value);\n    }\n    \n    // Phone number validation\n    if (fieldId.includes('phone') || fieldId.includes('Phone')) {\n      return validatePhoneNumber(value);\n    }\n    \n    // Email validation\n    if (fieldId === 'email') {\n      return validateEmail(value);\n    }\n    \n    return '';\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    selectedType.formFields.forEach(field => {\n      const value = formData[field.id] || '';\n      \n      // Required field validation\n      if (field.required && (!value || value.toString().trim() === '')) {\n        newErrors[field.id] = `${field.label} is required`;\n      }\n      \n      // Specific field validations\n      if (value && value.toString().trim() !== '') {\n        const fieldValidation = validateField(field.id, value.toString().trim());\n        if (fieldValidation) {\n          newErrors[field.id] = fieldValidation;\n        }\n      }\n    });\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSubmit(formData);\n    }\n  };\n\n  const renderField = (field: any) => {\n    const value = formData[field.id] || '';\n    const error = errors[field.id];\n\n    if (field.type === 'textarea') {\n      return (\n        <div key={field.id} className=\"space-y-2 sm:space-y-3\">\n          <label className=\"block text-xs sm:text-sm font-semibold text-slate-700\">\n            {field.label}\n            {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n          <textarea\n            value={value}\n            onChange={(e) => handleInputChange(field.id, e.target.value)}\n            placeholder={field.placeholder}\n            rows={4}\n            className={`\n              w-full px-3 sm:px-4 py-2 sm:py-3 border-2 rounded-lg sm:rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 focus:border-rose-500 transition-all duration-300 text-sm sm:text-base\n              ${error ? 'border-red-400 bg-red-50' : 'border-slate-200 hover:border-rose-300'}\n            `}\n          />\n          {error && (\n            <div className=\"flex items-center space-x-2 text-red-600\">\n              <svg className=\"w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n              <p className=\"text-xs sm:text-sm font-medium\">{error}</p>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    if (field.type === 'checkbox') {\n      return (\n        <div key={field.id} className=\"space-y-2 sm:space-y-3\">\n          <label className=\"block text-xs sm:text-sm font-semibold text-slate-700\">\n            {field.label}\n            {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n          <div className=\"space-y-2 sm:space-y-3\">\n            <label className=\"flex items-center space-x-2 sm:space-x-3 p-2 sm:p-3 rounded-lg hover:bg-rose-50 transition-colors cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={value === 'Yes'}\n                onChange={(e) => handleInputChange(field.id, e.target.checked ? 'Yes' : '')}\n                className=\"w-4 h-4 sm:w-5 sm:h-5 text-rose-600 border-2 border-slate-300 rounded focus:ring-rose-500 focus:ring-2 transition-all duration-200\"\n              />\n              <span className=\"text-xs sm:text-sm font-medium text-slate-700\">Yes</span>\n            </label>\n            <label className=\"flex items-center space-x-2 sm:space-x-3 p-2 sm:p-3 rounded-lg hover:bg-rose-50 transition-colors cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={value === 'No'}\n                onChange={(e) => handleInputChange(field.id, e.target.checked ? 'No' : '')}\n                className=\"w-4 h-4 sm:w-5 sm:h-5 text-rose-600 border-2 border-slate-300 rounded focus:ring-rose-500 focus:ring-2 transition-all duration-200\"\n              />\n              <span className=\"text-xs sm:text-sm font-medium text-slate-700\">No</span>\n            </label>\n          </div>\n          {error && (\n            <div className=\"flex items-center space-x-2 text-red-600\">\n              <svg className=\"w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n              <p className=\"text-xs sm:text-sm font-medium\">{error}</p>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div key={field.id} className=\"space-y-2 sm:space-y-3\">\n        <label className=\"block text-xs sm:text-sm font-semibold text-slate-700\">\n          {field.label}\n          {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n        <input\n          type={field.type}\n          value={value}\n          onChange={(e) => handleInputChange(field.id, e.target.value)}\n          placeholder={field.placeholder}\n          className={`\n            w-full px-3 sm:px-4 py-2 sm:py-3 border-2 rounded-lg sm:rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 focus:border-rose-500 transition-all duration-300 text-sm sm:text-base\n            ${error ? 'border-red-400 bg-red-50' : 'border-slate-200 hover:border-rose-300'}\n          `}\n        />\n        {error && (\n          <div className=\"flex items-center space-x-2 text-red-600\">\n            <svg className=\"w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n            <p className=\"text-xs sm:text-sm font-medium\">{error}</p>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getParticipantFields = () => {\n    return selectedType.formFields.filter(field => \n      field.id.includes('participant') || \n      field.id.includes('Phone') || \n      field.id === 'fullName' ||\n      field.id === 'phoneNumber' ||\n      field.id === 'representativePhone' ||\n      field.id === 'participantNames'\n    );\n  };\n\n  const getCommonFields = () => {\n    return selectedType.formFields.filter(field => \n      !field.id.includes('participant') && \n      !field.id.includes('Phone') && \n      field.id !== 'fullName' &&\n      field.id !== 'phoneNumber' &&\n      field.id !== 'representativePhone' &&\n      field.id !== 'participantNames' &&\n      field.id !== 'email'\n    );\n  };\n\n  const getEmailField = () => {\n    return selectedType.formFields.find(field => field.id === 'email');\n  };\n\n  return (\n    <div className=\"space-y-6 sm:space-y-8\">\n      {/* Header without Back Button */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <h3 className=\"text-xl sm:text-2xl font-bold bg-gradient-to-r from-rose-600 to-orange-600 bg-clip-text text-transparent font-heading\">\n            {selectedType.name} Registration Form\n          </h3>\n        </div>\n        <div className=\"w-12 sm:w-16 h-1 bg-gradient-to-r from-rose-500 to-orange-500 rounded-full\"></div>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6 sm:space-y-8\">\n        {/* Participant Information Section */}\n        <div className=\"bg-gradient-to-br from-rose-50 to-orange-50 p-4 sm:p-6 rounded-xl sm:rounded-2xl border border-rose-200/50 shadow-lg hover:shadow-xl transition-all duration-300\">\n          <div className=\"flex items-center space-x-2 sm:space-x-3 mb-4 sm:mb-6\">\n            <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-rose-500 to-orange-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white text-xs sm:text-sm font-bold\">👥</span>\n            </div>\n            <h4 className=\"text-lg sm:text-xl font-bold text-slate-800 font-heading\">\n              {performanceType === 'solo' ? 'Participant Information' : \n               performanceType === 'duet' ? 'Participants Information' : \n               'Group Information'}\n            </h4>\n          </div>\n          <div className=\"space-y-4 sm:space-y-6\">\n            {getParticipantFields().map(renderField)}\n            {getEmailField() && renderField(getEmailField()!)}\n          </div>\n        </div>\n\n        {/* Common Information Section */}\n        <div className=\"bg-gradient-to-br from-slate-50 to-blue-50 p-4 sm:p-6 rounded-xl sm:rounded-2xl border border-slate-200/50 shadow-lg hover:shadow-xl transition-all duration-300\">\n          <div className=\"flex items-center space-x-2 sm:space-x-3 mb-4 sm:mb-6\">\n            <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-slate-500 to-blue-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white text-xs sm:text-sm font-bold\">🎭</span>\n            </div>\n            <h4 className=\"text-lg sm:text-xl font-bold text-slate-800 font-heading\">\n              Event Information\n            </h4>\n          </div>\n          <div className=\"space-y-4 sm:space-y-6\">\n            {getCommonFields().map(renderField)}\n          </div>\n        </div>\n        \n        {/* Bottom Navigation */}\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4 pt-4 sm:pt-6\">\n          <button\n            onClick={onBack}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 hover:border-gray-400 transition-all duration-200 shadow-sm w-full sm:w-auto\"\n          >\n            ← Back\n          </button>\n          <button\n            type=\"submit\"\n            className=\"px-6 sm:px-8 py-2 sm:py-3 bg-gradient-to-r from-rose-600 to-orange-600 text-white rounded-full hover:from-rose-700 hover:to-orange-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl font-semibold text-sm sm:text-base w-full sm:w-auto\"\n          >\n            Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm; "],"names":["_ref","performanceType","onSubmit","onBack","formData","setFormData","useState","errors","setErrors","selectedType","eventConfig","performanceTypes","find","type","id","_jsx","children","handleInputChange","fieldId","value","prev","toString","trim","fieldValidation","validateField","age","ageNum","parseInt","isNaN","validateAge","includes","test","email","phone","renderField","field","error","_jsxs","className","label","required","onChange","e","target","placeholder","rows","fill","viewBox","fillRule","d","clipRule","checked","getEmailField","formFields","name","preventDefault","validateForm","newErrors","forEach","Object","keys","length","filter","map","onClick"],"sourceRoot":""}