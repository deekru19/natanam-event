{"version":3,"file":"static/js/275.bbe8f95d.chunk.js","mappings":"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","sources":["components/PaymentSummary.tsx"],"sourcesContent":["import React from 'react';\nimport { eventConfig } from '../config/eventConfig';\n\ninterface PaymentSummaryProps {\n  selectedSlots: string[];\n  performanceType: string;\n  participantDetails: Record<string, any>;\n  onBack: () => void;\n  onProceed: () => void;\n}\n\nconst PaymentSummary: React.FC<PaymentSummaryProps> = ({\n  selectedSlots,\n  performanceType,\n  participantDetails,\n  onBack,\n  onProceed\n}) => {\n  const selectedType = eventConfig.performanceTypes.find(type => type.id === performanceType);\n  \n  if (!selectedType) {\n    return <div>Invalid performance type.</div>;\n  }\n\n  const getParticipantCount = () => {\n    switch (performanceType) {\n      case 'solo':\n        return 1;\n      case 'duet':\n        return 2;\n      case 'group':\n        // Count participants from the textarea (assuming comma or newline separated)\n        const participantNames = participantDetails.participantNames || '';\n        if (participantNames.trim()) {\n          // Split by comma or newline and count non-empty entries\n          const participants = participantNames.split(/[,\\n]/).filter((name: string) => name.trim()).length;\n          return Math.max(participants, 1); // At least 1 participant\n        }\n        return 3; // Default group size\n      default:\n        return 1;\n    }\n  };\n\n  const participantCount = getParticipantCount();\n  const totalCost = selectedSlots.length * selectedType.pricePerPerson * participantCount;\n\n  const getParticipantDisplayName = () => {\n    switch (performanceType) {\n      case 'solo':\n        return participantDetails.fullName || 'N/A';\n      case 'duet':\n        return `${participantDetails.participant1Name || 'N/A'} & ${participantDetails.participant2Name || 'N/A'}`;\n      case 'group':\n        const participantNames = participantDetails.participantNames || '';\n        if (participantNames.trim()) {\n          const participants = participantNames.split(/[,\\n]/).filter((name: string) => name.trim());\n          return participants.length > 0 ? participants.join(', ') : 'N/A';\n        }\n        return 'N/A';\n      default:\n        return 'N/A';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">Payment Summary</h3>\n        <button\n          onClick={onBack}\n          className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n        >\n          ← Back\n        </button>\n      </div>\n\n      <div className=\"bg-gray-50 rounded-lg p-6 space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-2\">Performance Details</h4>\n            <div className=\"space-y-1 text-sm text-gray-600\">\n              <p><span className=\"font-medium\">Type:</span> {selectedType.name}</p>\n              <p><span className=\"font-medium\">Participant(s):</span> {getParticipantDisplayName()}</p>\n              <p><span className=\"font-medium\">Dance Style:</span> {participantDetails.danceStyle || 'N/A'}</p>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"font-medium text-gray-700 mb-2\">Time Slots</h4>\n            <div className=\"space-y-1 text-sm text-gray-600\">\n              <p><span className=\"font-medium\">Selected:</span> {selectedSlots.length} slot{selectedSlots.length !== 1 ? 's' : ''}</p>\n              <p><span className=\"font-medium\">Times:</span></p>\n              <div className=\"ml-4\">\n                {selectedSlots.map((slot, index) => (\n                  <p key={index} className=\"text-gray-600\">• {slot}</p>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t pt-4\">\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center text-sm text-slate-600\">\n              <span>Price per person:</span>\n              <span>₹{selectedType.pricePerPerson}</span>\n            </div>\n            <div className=\"flex justify-between items-center text-sm text-slate-600\">\n              <span>Number of participants:</span>\n              <span>{participantCount}</span>\n            </div>\n            <div className=\"flex justify-between items-center text-sm text-slate-600\">\n              <span>Number of slots:</span>\n              <span>{selectedSlots.length}</span>\n            </div>\n            <div className=\"border-t pt-2 mt-2\">\n              <div className=\"flex justify-between items-center text-base font-medium\">\n                <span>Total Amount:</span>\n                <span className=\"text-slate-700\">₹{totalCost.toLocaleString()}</span>\n              </div>\n              <p className=\"text-xs text-slate-500 mt-1\">\n                ₹{selectedType.pricePerPerson} × {participantCount} person{participantCount !== 1 ? 's' : ''} × {selectedSlots.length} slot{selectedSlots.length !== 1 ? 's' : ''}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n        <h4 className=\"font-medium text-yellow-800 mb-2\">Payment Instructions</h4>\n        <ul className=\"text-sm text-yellow-700 space-y-1\">\n          <li>• Please complete the payment using UPI or any preferred method</li>\n          <li>• Amount to pay: ₹{totalCost.toLocaleString()}</li>\n          <li>• You can optionally upload a screenshot of your payment proof</li>\n          <li>• Your booking will be confirmed after payment verification</li>\n        </ul>\n      </div>\n\n      <div className=\"flex justify-end space-x-3\">\n        <button\n          onClick={onBack}\n          className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\n        >\n          Back\n        </button>\n        <button\n          onClick={onProceed}\n          className=\"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n        >\n          Pay Now\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentSummary; "],"names":["_ref","selectedSlots","performanceType","participantDetails","onBack","onProceed","selectedType","eventConfig","performanceTypes","find","type","id","_jsx","children","participantCount","getParticipantCount","participantNames","trim","participants","split","filter","name","length","Math","max","totalCost","pricePerPerson","_jsxs","className","onClick","getParticipantDisplayName","fullName","participant1Name","participant2Name","join","danceStyle","map","slot","index","toLocaleString"],"sourceRoot":""}