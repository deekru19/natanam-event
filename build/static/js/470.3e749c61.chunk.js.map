{"version":3,"file":"static/js/470.3e749c61.chunk.js","mappings":"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","sources":["components/ScreenshotUpload.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface ScreenshotUploadProps {\n  onUpload: (file: File) => void;\n  onSkip: () => void;\n  onBack: () => void;\n}\n\nconst ScreenshotUpload: React.FC<ScreenshotUploadProps> = ({ onUpload, onSkip, onBack }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [error, setError] = useState<string>('');\n  const [uploading, setUploading] = useState(false);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    setError('');\n\n    if (!file) {\n      setSelectedFile(null);\n      return;\n    }\n\n    // Validate file type\n    const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!validTypes.includes(file.type)) {\n      setError('Please select a JPG or PNG file.');\n      setSelectedFile(null);\n      return;\n    }\n\n    // Validate file size (2MB = 2 * 1024 * 1024 bytes)\n    const maxSize = 2 * 1024 * 1024;\n    if (file.size > maxSize) {\n      setError('File size must be less than 2MB.');\n      setSelectedFile(null);\n      return;\n    }\n\n    setSelectedFile(file);\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file to upload.');\n      return;\n    }\n\n    setUploading(true);\n    try {\n      await onUpload(selectedFile);\n    } catch (err) {\n      setError('Upload failed. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">Upload Payment Proof (Optional)</h3>\n        <button\n          onClick={onBack}\n          className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n        >\n          ← Back\n        </button>\n      </div>\n\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <h4 className=\"font-medium text-blue-800 mb-2\">Upload Requirements</h4>\n        <ul className=\"text-sm text-blue-700 space-y-1\">\n          <li>• File format: JPG or PNG only</li>\n          <li>• Maximum file size: 2MB</li>\n          <li>• This step is optional - you can skip it</li>\n        </ul>\n      </div>\n\n      <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n        {selectedFile ? (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-center\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </div>\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-800\">{selectedFile.name}</p>\n              <p className=\"text-sm text-gray-500\">{formatFileSize(selectedFile.size)}</p>\n            </div>\n            <button\n              onClick={() => setSelectedFile(null)}\n              className=\"text-red-600 hover:text-red-800 text-sm font-medium\"\n            >\n              Remove file\n            </button>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-center\">\n              <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                </svg>\n              </div>\n            </div>\n            <div>\n              <p className=\"text-gray-600\">Click to select a file or drag and drop</p>\n              <p className=\"text-sm text-gray-500\">JPG, PNG up to 2MB</p>\n            </div>\n            <label className=\"cursor-pointer\">\n              <span className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\">\n                Choose File\n              </span>\n              <input\n                type=\"file\"\n                accept=\".jpg,.jpeg,.png\"\n                onChange={handleFileSelect}\n                className=\"hidden\"\n              />\n            </label>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <p className=\"text-sm text-red-600\">{error}</p>\n        </div>\n      )}\n\n      <div className=\"flex justify-end space-x-3\">\n        <button\n          onClick={onBack}\n          className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\n        >\n          Back\n        </button>\n        <button\n          onClick={onSkip}\n          className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\n        >\n          Skip Upload\n        </button>\n        {selectedFile && (\n          <button\n            onClick={handleUpload}\n            disabled={uploading}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {uploading ? 'Uploading...' : 'Upload & Continue'}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenshotUpload; "],"names":["_ref","onUpload","onSkip","onBack","selectedFile","setSelectedFile","useState","error","setError","uploading","setUploading","_jsxs","className","children","_jsx","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","name","bytes","i","Math","floor","log","parseFloat","pow","toFixed","formatFileSize","size","type","accept","onChange","event","_event$target$files","file","target","files","includes","async","err","disabled"],"sourceRoot":""}