{"version":3,"file":"static/js/70.416a0887.chunk.js","mappings":"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","sources":["components/PaymentSuccess.tsx"],"sourcesContent":["import React from 'react';\nimport { eventConfig } from '../config/eventConfig';\n\ninterface PaymentSuccessProps {\n  selectedSlots: string[];\n  performanceType: string;\n  participantDetails: Record<string, any>;\n  paymentData?: any;\n  onNewBooking: () => void;\n}\n\nconst PaymentSuccess: React.FC<PaymentSuccessProps> = ({\n  selectedSlots,\n  performanceType,\n  participantDetails,\n  paymentData,\n  onNewBooking\n}) => {\n  const selectedType = eventConfig.performanceTypes.find(type => type.id === performanceType);\n\n  const getParticipantName = () => {\n    switch (performanceType) {\n      case 'solo':\n        return participantDetails.fullName || 'N/A';\n      case 'duet':\n        return `${participantDetails.participant1Name || 'N/A'} & ${participantDetails.participant2Name || 'N/A'}`;\n      case 'group':\n        const participantNames = participantDetails.participantNames || '';\n        if (participantNames.trim()) {\n          const participants = participantNames.split(/[,\\n]/).filter((name: string) => name.trim());\n          return participants.length > 0 ? participants.join(', ') : 'N/A';\n        }\n        return 'N/A';\n      default:\n        return 'N/A';\n    }\n  };\n\n  return (\n    <div className=\"text-center space-y-6\">\n      {/* Success Icon */}\n      <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n        <svg className=\"w-10 h-10 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n        </svg>\n      </div>\n\n      {/* Success Message */}\n      <div>\n        <h3 className=\"text-2xl font-bold text-gray-800 mb-2\">Payment Successful!</h3>\n        <p className=\"text-gray-600 mb-4\">\n          Your booking has been confirmed. You will receive a confirmation email shortly.\n        </p>\n        \n        {paymentData?.paymentId && (\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mb-4 inline-block\">\n            <p className=\"text-sm text-green-700\">\n              <span className=\"font-medium\">Payment ID:</span> {paymentData.paymentId}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Booking Details */}\n      <div className=\"bg-gray-50 rounded-lg p-6 text-left max-w-md mx-auto\">\n        <h4 className=\"font-semibold text-gray-800 mb-4 text-center\">Booking Details</h4>\n        <div className=\"space-y-3 text-sm\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Date:</span>\n            <span className=\"font-medium\">{new Date(eventConfig.eventDate).toLocaleDateString()}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Performance:</span>\n            <span className=\"font-medium\">{selectedType?.name}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Participant(s):</span>\n            <span className=\"font-medium text-right\">{getParticipantName()}</span>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Time Slots:</span>\n            <div className=\"mt-1\">\n              {selectedSlots.map((slot, index) => (\n                <div key={index} className=\"font-medium text-right\">• {slot}</div>\n              ))}\n            </div>\n          </div>\n          {paymentData?.amount && (\n            <div className=\"border-t pt-3 mt-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Amount Paid:</span>\n                <span className=\"font-bold text-green-600\">₹{paymentData.amount.toLocaleString()}</span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 max-w-md mx-auto\">\n        <h4 className=\"font-medium text-blue-800 mb-2\">What's Next?</h4>\n        <ul className=\"text-sm text-blue-700 space-y-1 text-left\">\n          <li>• Please arrive 15 minutes before your first time slot</li>\n          <li>• Bring a screenshot of this confirmation for verification</li>\n          <li>• Contact us if you have any questions</li>\n        </ul>\n      </div>\n\n      {/* Action Button */}\n      <button\n        onClick={onNewBooking}\n        className=\"px-8 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors font-medium\"\n      >\n        Book Another Performance\n      </button>\n    </div>\n  );\n};\n\nexport default PaymentSuccess;\n"],"names":["_ref","selectedSlots","performanceType","participantDetails","paymentData","onNewBooking","selectedType","eventConfig","performanceTypes","find","type","id","_jsxs","className","children","_jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","paymentId","Date","eventDate","toLocaleDateString","name","getParticipantName","fullName","participant1Name","participant2Name","participantNames","trim","participants","split","filter","length","join","map","slot","index","amount","toLocaleString","onClick"],"sourceRoot":""}